
The following have been reloaded with a version change:
  1) perl/5.36.0 => perl/5.34.1

Writing bisulfite genomes out into a single MFA (multi FastA) file

Bisulfite Genome Indexer version v0.23.0 (last modified: 14 April 2019)

A directory called /uoa/home/r02hw22/Equina_Methylation_Analysis/Data2/Bisulfite_Genome/ already exists. Already existing converted sequences and/or already existing Bowtie 2 or HISAT2) indices will be overwritten!


Step I - Prepare genome folders - completed



Total number of conversions performed:
C->T:	76735720
G->A:	76718116

Step II - Genome bisulfite conversions - completed


Bismark Genome Preparation - Step III: Launching the Bowtie 2 indexer
Please be aware that this process can - depending on genome size - take several hours!
Settings:
  Output files: "BS_GA.*.bt2"
Settings:
  Output files: "BS_CT.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  genome_mfa.GA_conversion.fa
  genome_mfa.CT_conversion.fa
Building a SMALL index
Reading reference sizes
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:08
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time reading reference sizes: 00:00:08
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:06
bmax according to bmaxDivN setting: 102264582
Using parameters --bmax 76698437 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 76698437 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  Time to join reference sequences: 00:00:06
bmax according to bmaxDivN setting: 102264582
Using parameters --bmax 76698437 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 76698437 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:18
  Allocating rank array
  Ranking v-sort output
  V-Sorting samples time: 00:00:20
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:05
  Invoking Larsson-Sadakane on ranks
  Ranking v-sort output time: 00:00:06
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:10
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:01
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 4.09058e+08 (target: 76698436)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  Invoking Larsson-Sadakane on ranks time: 00:00:07
  Sanity-checking and returning
Building samples
  No samples; assembling all-inclusive block
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  Sorting block of length 409058329 for bucket 1
  (Using difference cover)
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 4.09058e+08 (target: 76698436)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 409058329 for bucket 1
  (Using difference cover)
  Sorting block time: 00:04:09
Returning block of 409058330 for bucket 1
  Sorting block time: 00:04:07
Returning block of 409058330 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 204475220
fchr[G]: 281210940
fchr[T]: 281210940
fchr[$]: 409058329
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 127757104
fchr[G]: 127757104
fchr[T]: 204475220
fchr[$]: 409058329
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 140602563 bytes to primary EBWT file: BS_GA.1.bt2
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 140602563 bytes to primary EBWT file: BS_CT.1.bt2
Wrote 102264588 bytes to secondary EBWT file: BS_GA.2.bt2
Wrote 102264588 bytes to secondary EBWT file: BS_CT.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 409058329
    bwtLen: 409058330
    sz: 102264583
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
    bwtSz: 102264583
    lineRate: 6
Headers:
    len: 409058329
    offRate: 4
    offMask: 0xfffffff0
    bwtLen: 409058330
    sz: 102264583
    ftabChars: 10
    eftabLen: 20
    bwtSz: 102264583
    lineRate: 6
    eftabSz: 80
    ftabLen: 1048577
    offRate: 4
    offMask: 0xfffffff0
    ftabSz: 4194308
    offsLen: 25566146
    ftabChars: 10
    eftabLen: 20
    offsSz: 102264584
    lineSz: 64
    eftabSz: 80
    ftabLen: 1048577
    sideSz: 64
    sideBwtSz: 48
    ftabSz: 4194308
    offsLen: 25566146
    sideBwtLen: 192
    numSides: 2130513
    offsSz: 102264584
    lineSz: 64
    numLines: 2130513
    ebwtTotLen: 136352832
    sideSz: 64
    sideBwtSz: 48
    ebwtTotSz: 136352832
    color: 0
    sideBwtLen: 192
    numSides: 2130513
    reverse: 0
    numLines: 2130513
    ebwtTotLen: 136352832
    ebwtTotSz: 136352832
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:05:37
Reading reference sizes
Total time for call to driver() for forward index: 00:05:37
Reading reference sizes
  Time reading reference sizes: 00:00:04
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time reading reference sizes: 00:00:04
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:02
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 102264582
Using parameters --bmax 76698437 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 76698437 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Time to join reference sequences: 00:00:03
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 102264582
Using parameters --bmax 76698437  Building sPrime
  Building sPrimeOrder
 --dcv 1024
  Doing ahead-of-time memory usage test
  V-Sorting samples
  Passed!  Constructing with these parameters: --bmax 76698437 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:11
  Allocating rank array
  Ranking v-sort output
  V-Sorting samples time: 00:00:12
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:03
  Invoking Larsson-Sadakane on ranks
  Ranking v-sort output time: 00:00:03
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:06
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:01
Calculating bucket sizes
  Invoking Larsson-Sadakane on ranks time: 00:00:05
  Sanity-checking and returning
Building samples
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 4.09058e+08 (target: 76698436)
Reserving space for 12 sample suffixes
Generating random suffixes
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
Entering Ebwt loop
Getting block 1 of 1
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  No samples; assembling all-inclusive block
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 4.09058e+08 (target: 76698436)
Converting suffix-array elements to index image
  Sorting block of length 409058329 for bucket 1
  (Using difference cover)
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 409058329 for bucket 1
  (Using difference cover)
  Sorting block time: 00:04:08
Returning block of 409058330 for bucket 1
  Sorting block time: 00:04:07
Returning block of 409058330 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 204475220
fchr[G]: 281210940
fchr[T]: 281210940
fchr[$]: 409058329
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Exited Ebwt loop
fchr[A]: 0
Wrote 140602563 bytes to primary EBWT file: BS_GA.rev.1.bt2
fchr[C]: 127757104
fchr[G]: 127757104
fchr[T]: 204475220
fchr[$]: 409058329
Wrote 102264588 bytes to secondary EBWT file: BS_GA.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 409058329
    bwtLen: 409058330
    sz: 102264583
    bwtSz: 102264583
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
Exiting Ebwt::buildToDisk()
Returning from initFromVector
    eftabLen: 20
    eftabSz: 80
Wrote 140602563 bytes to primary EBWT file: BS_CT.rev.1.bt2
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 25566146
    offsSz: 102264584
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
Wrote 102264588 bytes to secondary EBWT file: BS_CT.rev.2.bt2
    sideBwtLen: 192
    numSides: 2130513
    numLines: 2130513
    ebwtTotLen: 136352832
    ebwtTotSz: 136352832
    color: 0
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
    reverse: 1
Headers:
    len: 409058329
    bwtLen: 409058330
Total time for backward call to driver() for mirror index: 00:05:14
    sz: 102264583
    bwtSz: 102264583
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 25566146
    offsSz: 102264584
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 2130513
    numLines: 2130513
    ebwtTotLen: 136352832
    ebwtTotSz: 136352832
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:05:14
